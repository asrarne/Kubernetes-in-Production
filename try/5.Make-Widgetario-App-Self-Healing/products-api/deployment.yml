# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: products-api
#   labels:
#     app: widgetario
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: widgetario
#       component: products-api
#   template:
#     metadata:
#       labels:
#         app: widgetario
#         component: products-api
#     spec:
#       containers:
#         - name: app # the name of the container - not too important at this stage
#           image: widgetario/products-api:21.03 # the Docker image to run - this is the full reference with the tag
#           ports:
#             - containerPort: 80
#               name: http
#           readinessProbe:
#             httpGet:
#               path: /
#               port: http
#             periodSeconds: 20
#             failureThreshold: 1
#           livenessProbe:
#             httpGet:
#               path: /
#               port: http
#             periodSeconds: 30
#             initialDelaySeconds: 20
#           volumeMounts:
#             - name: app-properties
#               mountPath: "app/config"
#             - name: db-properties
#               mountPath: "app/config/db"
#               readOnly: true
#       volumes:
#         - name: app-properties
#           configMap:
#             name: products-api-properties
#         - name: db-properties
#           secret:
#             secretName: products-api-db

apiVersion: apps/v1
kind: Deployment
metadata:
  name: products-api
  labels:
    app: widgetario
spec:
  replicas: 2
  selector:
    matchLabels:
      app: widgetario
      component: products-api
  template:
    metadata:
      labels:
        app: widgetario
        component: products-api
    spec:
      containers:
        - name: app
          image: widgetario/products-api:21.03
          volumeMounts:
            - name: app-properties
              mountPath: "/app/config"
              readOnly: true
            - name: db-properties
              mountPath: "/app/config/db"
              readOnly: true
          ports:
            - containerPort: 80
              name: http
          readinessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 20
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 30
            initialDelaySeconds: 20
      volumes:
        - name: app-properties
          configMap:
            name: products-api-properties
        - name: db-properties
          secret:
            secretName: products-api-db
