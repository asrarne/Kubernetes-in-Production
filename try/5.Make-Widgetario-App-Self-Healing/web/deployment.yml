# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: web
#   labels:
#     app: widgetario
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: widgetario
#       component: web
#   template:
#     metadata:
#       labels:
#         app: widgetario
#         component: web
#     spec:
#       containers:
#         - name: app # the name of the container - not too important at this stage
#           image: widgetario/web:21.03-v2 # the Docker image to run - this is the full reference with the tag
#           ports:
#             - containerPort: 80
#               name: http
#           readinessProbe:
#             httpGet:
#               path: /up
#               port: http
#             periodSeconds: 5
#             failureThreshold: 1
#           livenessProbe:
#             httpGet:
#               path: /up
#               port: http
#             periodSeconds: 20
#             initialDelaySeconds: 20
#           envFrom:
#             - configMapRef:
#                 name: web-features
#           volumeMounts:
#             - name: logging-config
#               mountPath: "/app/config"
#               readOnly: true
#             - name: api-config
#               mountPath: "/app/secrets"
#               readOnly: true
#       volumes:
#       # volumes are like storage units attached to the Pod -
#       # they're not seen by the container unless explicitly mounted
#         - name: logging-config
#           configMap:
#             name: web-logging
#         - name: api-config
#           secret:
#             secretName: web-api

apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    app: widgetario
spec:
  replicas: 2
  selector:
    matchLabels:
      app: widgetario
      component: web
  template:
    metadata:
      labels:
        app: widgetario
        component: web
    spec:
      containers:
        - name: app
          image: widgetario/web:21.03-v2
          env:
            - name: Widgetario__Theme
              value: dark
          volumeMounts:
            - name: logging-config
              mountPath: "/app/config"
              readOnly: true
            - name: api-config
              mountPath: "/app/secrets"
              readOnly: true
          ports:
            - containerPort: 80
              name: http
          readinessProbe:
            httpGet:
              path: /up
              port: http
            periodSeconds: 5
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /up
              port: http
            periodSeconds: 20
            initialDelaySeconds: 20
      volumes:
        - name: logging-config
          configMap:
            name: web-logging
        - name: api-config
          secret:
            secretName: web-api
